{"version":3,"sources":["components/Navigation/Navigation.js","store/actionCreators.js","store/actions.js","components/Stepper/Stepper.js","components/WeatherUI/Date/Date.js","components/WeatherUI/WeatherUI.js","containers/Weather/Weather.js","components/Layout/Layout.js","App.js","serviceWorker.js","theme.js","store/reducers/reducer.js","index.js","assests/mt.jpg","assests/svgs/cloudy.svg","assests/svgs/day.svg","assests/svgs/night.svg","assests/svgs/cloudyDay.svg","assests/svgs/cloudyNight.svg","assests/svgs/thunder.svg","assests/svgs/drizzle.svg","assests/svgs/rainy.svg","assests/svgs/snowy.svg","assests/svgs/haze.png","assests/svgs/humidity.svg","assests/svgs/wind.svg","assests/svgs/air.svg"],"names":["useStyles","makeStyles","theme","root","flexGrow","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","spacing","searchIcon","padding","height","alignItems","justifyContent","inputRoot","color","down","inputInput","paddingLeft","transition","transitions","create","whiteColor","connect","state","dispatch","onSearch","searchInput","axios","get","then","res","lat","data","results","geometry","lon","lng","type","currCity","onLocation","cityName","components","city","actionCreators","onUnitChange","value","props","classes","useState","setSearchInput","firstClick","setFirstClick","getPosition","e","a","target","ariaLabel","navigator","geolocation","getCurrentPosition","currentPosition","coords","latitude","longitude","AppBar","elevation","Toolbar","Grid","container","item","sm","Typography","className","variant","noWrap","InputBase","placeholder","onChange","input","inputProps","onKeyPress","key","onKeyEnter","onClick","htmlFor","IconButton","aria-label","component","justify","ButtonGroup","Button","maxWidth","background","isReset","dataLoaded","onDateIncrement","onDateDecrement","useTheme","React","activeStep","setActiveStep","MobileStepper","steps","nextButton","size","prevActiveStep","disabled","direction","backButton","useStyle","fontSize","date","minWidth","flex","bullet","margin","transform","pos","marginBottom","capitalize","textTransform","bg","backdropFilter","icons","objectFit","subs","currentCity","temp_unit","speed_unit","isMetric","weatherIcon","weatherType","isNight","night","weatherDescription","cloudyNight","thunder","drizzle","rainy","snowy","haze","cloudy","cloudyDay","day","Fragment","xs","md","lg","Card","square","CardContent","CardMedia","image","gutterBottom","temperature","feelsLike","humidity","wind","windSpeed","pressure","Skeleton","animation","Weather","dailyWeather","windDegree","isForecast","inputSearch","inputLat","inputLon","units","this","metric","updatedDailyWeather","daily","setState","convertDate","current","dt","Math","round","temp","feels_like","msTokmh","wind_speed","degToCompass","wind_deg","weather","main","description","onDataLoad","prevProps","prevState","stateLoaderHandler","currDay","givenDaysWeather","max","convertedDate","Date","moment","format","num","floor","speed","toFixed","hourofDay","getHours","Component","currentDayArrayIndex","backgroundImage","backgroundRepeat","backgroundSize","fullHeight","mainContent","bottom","left","Layout","Paper","join","App","Boolean","window","location","hostname","match","createMuiTheme","text","primary","initialState","reducer","action","convertedCurrentDate","updatedCurrentDayArrayIndex","add","shouldReset","subtract","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.6552d8cb.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { AppBar, Toolbar, Typography, InputBase, Grid, ButtonGroup, Button } from '@material-ui/core';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport {connect} from 'react-redux';\r\nimport * as actionTypes from '../../store/actions';\r\nimport * as actionCreators from '../../store/actionCreators';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n      textAlign: 'left',\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n      [theme.breakpoints.down('md')]: {\r\n        width: '55%',\r\n      },\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `${theme.spacing(4)}px`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '30ch',\r\n        '&:focus': {\r\n          width: '35ch',\r\n        },\r\n      },\r\n    },\r\n    whiteColor: {\r\n      color: '#ffffff'\r\n    },\r\n}));\r\n\r\n\r\n// at line IconButton onClick should have a function and not a direct console.log statement. @https://stackoverflow.com/questions/40167287/react-material-ui-how-do-i-know-i-can-use-onclick-for-button <-- last answer\r\n// @https://reactjs.org/docs/handling-events.html\r\nconst Navigation = (props) => {\r\n    const classes = useStyles();\r\n    const [searchInput, setSearchInput] = useState('');\r\n    const [firstClick, setFirstClick] = useState(0);\r\n    \r\n    const onKeyEnter = (e) => {\r\n      if(e.key === 'Enter'){\r\n        props.onSearch(searchInput)\r\n      }\r\n    }\r\n\r\n    const getPosition = async (e) => {\r\n      if(firstClick === 0 || e.target.ariaLabel !== 'search'){\r\n        await navigator.geolocation.getCurrentPosition(\r\n          (currentPosition) => {\r\n            props.onLocation(currentPosition.coords.latitude, currentPosition.coords.longitude);\r\n          }\r\n        )\r\n        setFirstClick(\r\n          firstClick + 1\r\n        );\r\n      }\r\n\r\n    }\r\n    const degree = \"°\";\r\n    return(\r\n        <AppBar position=\"static\"  elevation={0} color=\"transparent\">\r\n            <Toolbar>\r\n                <Grid container>\r\n                    <Grid container item sm={4}>\r\n                        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                            WeatherApp\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid container item sm={5}>\r\n                        <div className={classes.search}>\r\n                            <InputBase\r\n                            placeholder=\"Search…\"\r\n                            value={searchInput}\r\n                            onChange={(e) => setSearchInput(e.target.value)}\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                            onKeyPress={ (e) => onKeyEnter(e)}\r\n                            onClick={ getPosition }\r\n                            />\r\n                          <label htmlFor=\"icon-button-location\">\r\n                            <IconButton className={classes.whiteColor} aria-label=\"location\" component=\"span\" onClick={(e) => getPosition(e) } >  \r\n                                <MyLocationIcon />\r\n                            </IconButton>\r\n                          </label>\r\n                          <label htmlFor=\"icon-button-search\">\r\n                            <IconButton className={classes.whiteColor} aria-label=\"search\" component=\"span\" onClick={ () => props.onSearch(searchInput)  } >  \r\n                                <SearchIcon />\r\n                            </IconButton>\r\n                        </label>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid container item sm={3}  justify='flex-end'>\r\n                      <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\" >\r\n                        <Button onClick={() => props.onUnitChange(true)}>{degree}C</Button>\r\n                        <Button onClick={() => props.onUnitChange(false)}>{degree}K</Button>\r\n                      </ButtonGroup>\r\n                    </Grid>\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return(null)\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {  \r\n  return{\r\n      onSearch: (searchInput) => dispatch(actionCreators.getCoord(searchInput)),\r\n      onLocation: (lat, lon) => dispatch(actionCreators.getCity(lat, lon)),\r\n      onUnitChange: (value) => dispatch({type: actionTypes.UNITS_CHANGE, value: value})\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);","import * as actionTypes from './actions';\r\nimport axios from 'axios';\r\n\r\nexport const getCoord = (search) => {\r\n    return (dispatch) => {\r\n        axios.get(`https://api.opencagedata.com/geocode/v1/json?key=cb5a7baa82d348b0a24d3d8db0f31a3f&q=${search}`)\r\n            .then( res => {\r\n                const lat = res.data.results[0].geometry.lat;\r\n                const lon = res.data.results[0].geometry.lng;\r\n                dispatch({\r\n                    type: actionTypes.UPDATE_STORE,\r\n                    lat: lat,\r\n                    lon: lon,\r\n                    search: search,\r\n                    currCity: search\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const getCity = (lat, lon) => {\r\n    return (dispatch) => {\r\n        axios.get(`https://api.opencagedata.com/geocode/v1/json?q=${lat}+${lon}&key=cb5a7baa82d348b0a24d3d8db0f31a3f`)\r\n            .then( res => {\r\n                const cityName = res.data.results[0].components.city ? res.data.results[0].components.city : res.data.results[0].components.state ; //cause cities like delhi is a state in the api\r\n                dispatch({\r\n                    type: actionTypes.UPDATE_STORE,\r\n                    lat: lat,\r\n                    lon: lon,\r\n                    city: cityName,\r\n                    currCity: cityName\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\n","export const SEARCH = 'SEARCH';\r\nexport const LOCATION = 'LOCATION';\r\nexport const UPDATE_STORE = 'UPDATE_STORE';\r\nexport const UNITS_CHANGE = 'UNITS_CHANGE';\r\nexport const DATE_INCREMENT = 'DATE_INCREMENT';\r\nexport const DATE_DECREMENT = 'DATE_DECREMENT';\r\nexport const DATA_LOADED = 'DATA_LOADED';","import React from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport MobileStepper from '@material-ui/core/MobileStepper';\r\nimport Button from '@material-ui/core/Button';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport {connect} from 'react-redux';\r\nimport * as actionTypes from '../../store/actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 400,\r\n    flexGrow: 1,\r\n    background: '#fafafa2f',\r\n    [theme.breakpoints.down('sm')]: {\r\n      height: 12\r\n  },\r\n  },\r\n}));\r\n\r\nconst Stepper = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => {\r\n      if(props.isReset)\r\n      prevActiveStep = 0; //else stepper jumps when search is updated\r\n      return prevActiveStep + 1\r\n    });\r\n    props.onDateIncrement();\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) =>{\r\n      return prevActiveStep - 1\r\n    } );\r\n    props.onDateDecrement();\r\n  };\r\n\r\n  return (\r\n    <MobileStepper\r\n      variant=\"dots\"\r\n      steps={7}\r\n      position=\"static\"\r\n      activeStep={props.isReset ? 0 : activeStep}\r\n      className={classes.root}\r\n      nextButton={\r\n        <Button size=\"small\" onClick={handleNext} disabled={props.dataLoaded ? activeStep === 6 : activeStep === 0}>\r\n          Next\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </Button>\r\n      }\r\n      backButton={\r\n        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0 || props.isReset}>\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n          Back\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return({\r\n    isReset: state.isReset,\r\n    dataLoaded: state.dataLoaded\r\n  })\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {  \r\n  return{\r\n      onDateIncrement: () => dispatch({type: actionTypes.DATE_INCREMENT}),\r\n      onDateDecrement: () => dispatch({type: actionTypes.DATE_DECREMENT})\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Stepper)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {connect} from 'react-redux'\r\n\r\nconst useStyle =  makeStyles((theme) => ({\r\n    size:{\r\n        fontSize: '94px',\r\n        [theme.breakpoints.down('lg')]: {\r\n            fontSize: '65px',\r\n        },\r\n        [theme.breakpoints.down('md')]: {\r\n            fontSize: '50px',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '25px',\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nconst Date = (props) => {\r\n    const classes = useStyle();\r\n    return(\r\n        <Typography className={classes.size}>{props.date}</Typography>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return({\r\n        date: state.date\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps)(Date);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Stepper from '../Stepper/Stepper';\r\nimport Date from './Date/Date';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\n\r\n\r\nimport cloudy from '../../assests/svgs/cloudy.svg';\r\nimport day from '../../assests/svgs/day.svg';\r\nimport night from '../../assests/svgs/night.svg';\r\nimport cloudyDay from '../../assests/svgs/cloudyDay.svg';\r\nimport cloudyNight from '../../assests/svgs/cloudyNight.svg';\r\nimport thunder from '../../assests/svgs/thunder.svg';\r\nimport drizzle from '../../assests/svgs/drizzle.svg';\r\nimport rainy from '../../assests/svgs/rainy.svg';\r\nimport snowy from '../../assests/svgs/snowy.svg';\r\nimport haze from '../../assests/svgs/haze.png';\r\n\r\nimport humidity from '../../assests/svgs/humidity.svg'\r\nimport wind from '../../assests/svgs/wind.svg';\r\nimport pressure from '../../assests/svgs/air.svg';\r\nimport { ButtonGroup } from '@material-ui/core';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      minWidth: 50,\r\n      flex: 1,\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 30,\r\n      [theme.breakpoints.down('md')]: {\r\n        fontSize: 20,\r\n    },\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    capitalize: {\r\n        textTransform: 'capitalize',\r\n        fontSize: '50px',\r\n        [theme.breakpoints.down('md')]: {\r\n            fontSize: '30px',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            fontSize: '20px',\r\n        },\r\n    },\r\n    bg:{\r\n        backgroundColor: \"rgba(0,0,0, 0.3)\",\r\n        backdropFilter: \"blur(10px)\",\r\n        alignItems: 'center'\r\n    },\r\n    icons:{\r\n        height: 70, \r\n        objectFit: \"contain\",\r\n        [theme.breakpoints.down('md')]: {\r\n            height: 50, \r\n        },\r\n    },\r\n    subs:{\r\n        fontSize: '16px',\r\n        [theme.breakpoints.down('md')]: {\r\n            fontSize: '12px',\r\n        },\r\n    }\r\n}));\r\n  \r\n\r\nconst WeatherUI = (props) => {\r\n    const classes = useStyles();\r\n    const degree = \"°\";\r\n    let temp_unit = 'C';\r\n    let speed_unit = 'k/h';\r\n    if(!props.isMetric){\r\n        temp_unit = 'K';\r\n        speed_unit = 'm/h';\r\n    }\r\n    let weatherIcon = null;\r\n    if(props.weatherType === 'Clear' && !props.isNight){\r\n        weatherIcon = day;\r\n    }\r\n    else if(props.weatherType === 'Clear' && props.isNight){\r\n        weatherIcon = night;\r\n    }\r\n    else if(props.weatherType === 'Clouds' && !props.isNight && props.weatherDescription === 'few clouds'){\r\n        weatherIcon = cloudyDay;\r\n    }\r\n    else if(props.weatherType === 'Clouds' && props.isNight && props.weatherDescription === 'few clouds'){\r\n        weatherIcon = cloudyNight;\r\n    }\r\n    else if(props.weatherType === 'Clouds' && (props.weatherDescription === 'scattered clouds' || props.weatherDescription === 'broken clouds' || props.weatherDescription === 'overcast clouds') ){\r\n        weatherIcon = cloudy;\r\n    }\r\n    else if(props.weatherType === 'Thunderstorm'){\r\n        weatherIcon = thunder;\r\n    }\r\n    else if(props.weatherType === 'Drizzle'){\r\n        weatherIcon = drizzle;\r\n    }\r\n    else if(props.weatherType === '\tRain'){\r\n        weatherIcon = rainy;\r\n    }\r\n    else if(props.weatherType === 'Snow'){\r\n        weatherIcon = snowy;\r\n    }\r\n    else{\r\n        weatherIcon = haze;\r\n    }\r\n    return(\r\n        props.dataLoaded ? (\r\n        <React.Fragment>\r\n        <Grid container item xs={12} sm={12} md={4} lg={4} className={classes.bg}>\r\n            <Card className={classes.root} square elevation={0} >\r\n                <CardContent>\r\n                        <Typography  color=\"textPrimary\" className={classes.capitalize}>\r\n                            {props.currentCity}'s Weather\r\n                        </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n        <Grid container>\r\n            <Grid container item xs={12} sm={12} md={4} className={classes.bg}>\r\n                <Card className={classes.root} square elevation={0}>\r\n                    <CardContent>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <Date />\r\n                        </Grid>\r\n                        <Grid container item xs={12} justify='center'>\r\n                            <Stepper></Stepper>\r\n                        </Grid>\r\n                        \r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid container item xs={6} sm={6} md={2} className={classes.bg}>\r\n                <Card className={classes.root} square elevation={0}>\r\n                    <CardContent>\r\n                        <CardMedia image={weatherIcon} title={props.weatherDescription} className={classes.icons} component=\"img\" ></CardMedia>\r\n                        <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\r\n                        {props.temperature}{degree}{temp_unit}\r\n                        </Typography>\r\n                        <Typography className={classes.subs}>\r\n                            Feels like {props.feelsLike}{degree}{temp_unit}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid container item xs={6} sm={6} md={2} className={classes.bg}>\r\n                <Card className={classes.root} square elevation={0}>\r\n                    <CardContent>\r\n                    <CardMedia image={humidity} title=\"Humidity\" className={classes.icons}  component=\"img\" ></CardMedia>\r\n                        <Typography className={classes.title} color=\"textPrimary\" gutterBottom >\r\n                            {props.humidity}%\r\n                        </Typography>\r\n                        <Typography className={classes.subs}>\r\n                            Humidity\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid container item xs={6} sm={6} md={2} className={classes.bg}>\r\n                <Card className={classes.root} square elevation={0}>\r\n                    <CardContent>\r\n                    <CardMedia image={wind} title=\"Wind\" className={classes.icons}  component=\"img\" ></CardMedia>\r\n                        <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\r\n                            {props.windSpeed}{speed_unit}\r\n                        </Typography>\r\n                        <Typography className={classes.subs}>\r\n                            Wind\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid container item xs={6} sm={6} md={2} className={classes.bg}>\r\n                <Card className={classes.root} square elevation={0}>\r\n                    <CardContent>\r\n                    <CardMedia image={pressure} title=\"Pressure\" className={classes.icons}  component=\"img\" ></CardMedia>\r\n                        <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\r\n                            {props.pressure}hPa\r\n                        </Typography>\r\n                        <Typography className={classes.subs}>\r\n                            Pressure\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </Grid> \r\n        </React.Fragment> ) : ( <Skeleton animation=\"wave\" height={150} width=\"100%\"  />)\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return({\r\n        dataLoaded: state.dataLoaded,\r\n        lat: state.latitude,\r\n        lon: state.longitude,\r\n        currentCity: state.currentCity\r\n    })\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(WeatherUI);","import React, {Component} from 'react';\r\nimport WeatherUI from '../../components/WeatherUI/WeatherUI';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport moment from 'moment';\r\nimport * as actionTypes from '../../store/actions';\r\nclass Weather extends Component{\r\n    state = {\r\n        dailyWeather: [],\r\n        date: null,\r\n        temperature: null,\r\n        feelsLike: null,\r\n        humidity: null,\r\n        windSpeed: null,\r\n        windDegree: null,\r\n        pressure: null,\r\n        weatherType: null,\r\n        weatherDescription: null,\r\n        isMetric: true,\r\n        isForecast: false,\r\n        inputSearch: null,\r\n        inputLat: null,\r\n        inputLon: null\r\n    }\r\n    stateLoaderHandler(search, lat, lon, date) {\r\n        const units = this.props.metric ? 'metric' : 'imperial';\r\n        axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=1ee8a98a2077ca34d3b117fa0e9dc2f9&exclude=hourly&units=${units}`)\r\n            .then( res => { \r\n                const updatedDailyWeather = res.data.daily;\r\n                this.setState({\r\n                inputSearch: search,\r\n                inputLat:lat, \r\n                inputLon:lon,\r\n                isForecast: false,\r\n                isMetric: this.props.metric,\r\n                dailyWeather: updatedDailyWeather,\r\n                date: this.convertDate(res.data.current.dt),\r\n                temperature: Math.round(res.data.current.temp),\r\n                feelsLike: Math.round(res.data.current.feels_like),\r\n                humidity: res.data.current.humidity,\r\n                windSpeed: this.props.metric ? this.msTokmh(res.data.current.wind_speed) : res.data.current.wind_speed ,\r\n                windDegree: this.degToCompass(res.data.current.wind_deg),\r\n                pressure: res.data.current.pressure,\r\n                weatherType: res.data.current.weather[0].main,\r\n                weatherDescription: res.data.current.weather[0].description\r\n                });\r\n                this.props.onDataLoad();\r\n        })\r\n    }\r\n    componentDidUpdate(prevProps, prevState){\r\n        if(this.props.search && (this.state.inputSearch !== this.props.search)) {  //if not for \"and\" statement it goes into infinite loop cause setstate re-renders and then componentDidUpdate gets triggered\r\n            this.stateLoaderHandler(this.props.search, this.props.lat, this.props.lon, this.props.date);\r\n        }\r\n        if((this.props.lat && this.props.lon) && (this.state.inputLat !== this.props.lat) && (this.state.inputLon !== this.props.lon)){\r\n            this.stateLoaderHandler(this.props.search, this.props.lat, this.props.lon, this.props.date);\r\n        }\r\n        if(this.props.metric !== this.state.isMetric){\r\n            this.stateLoaderHandler(this.props.search, this.props.lat, this.props.lon, this.props.date);\r\n        }\r\n        if(this.props.currDay !== 0 && this.props.date !== this.state.date ){\r\n            const givenDaysWeather = this.state.dailyWeather[this.props.currDay];\r\n            this.setState({\r\n                isMetric: this.props.metric,\r\n                isForecast: true,\r\n                date: this.convertDate(givenDaysWeather.dt),\r\n                temperature: Math.round((givenDaysWeather.temp.max + givenDaysWeather.temp.max) / 2),\r\n                feelsLike: Math.round((givenDaysWeather.feels_like.day + givenDaysWeather.feels_like.day) /2),\r\n                humidity: givenDaysWeather.humidity,\r\n                windSpeed: this.props.metric ? this.msTokmh(givenDaysWeather.wind_speed) : givenDaysWeather.wind_speed ,\r\n                windDegree: this.degToCompass(givenDaysWeather.wind_deg),\r\n                pressure: givenDaysWeather.pressure,\r\n                weatherType: givenDaysWeather.weather[0].main,\r\n                weatherDescription: givenDaysWeather.weather[0].description\r\n            })\r\n        }\r\n        if(prevState.isForecast && this.props.currDay === 0){\r\n            this.stateLoaderHandler(this.props.search, this.props.lat, this.props.lon, this.props.date);\r\n        }\r\n        \r\n    }\r\n    convertDate(date){\r\n        const convertedDate = new Date(date * 1000); //as openweathermap has date in unix format\r\n        let convertedDateFormated =  moment(convertedDate).format('LL');\r\n        return convertedDateFormated;\r\n    }\r\n    degToCompass(num) { //@https://stackoverflow.com/questions/7490660/converting-wind-direction-in-angles-to-text-words\r\n        const val = Math.floor((num / 22.5) + 0.5);\r\n        const arr = [\"N\", \"NNE\", \"NE\", \"ENE\", \"E\", \"ESE\", \"SE\", \"SSE\", \"S\", \"SSW\", \"SW\", \"WSW\", \"W\", \"WNW\", \"NW\", \"NNW\"];\r\n        return arr[(val % 16)];\r\n    }\r\n    msTokmh(speed){\r\n        const kmphSpeed = (speed * (18/5)).toFixed(1);\r\n        return kmphSpeed;\r\n    }\r\n    isNight(){\r\n        const timeofDay = new Date();\r\n        const hourofDay = timeofDay.getHours();\r\n        if(hourofDay > 19 && hourofDay < 6)\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    render(){\r\n        {this.isNight()}\r\n        return(\r\n            <WeatherUI temperature={this.state.temperature} \r\n            feelsLike={this.state.feelsLike} \r\n            humidity={this.state.humidity} \r\n            windSpeed={this.state.windSpeed} //its in m/s convert to km/h\r\n            windDegree={this.state.windDegree} \r\n            pressure={this.state.pressure} \r\n            weatherType={this.state.weatherType}\r\n            weatherDescription={this.state.weatherDescription}\r\n            isMetric={this.state.isMetric}\r\n            isForecast={this.state.isForecast}\r\n            isNight={this.isNight()}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return({\r\n        search: state.search,\r\n        lat: state.latitude,\r\n        lon: state.longitude,\r\n        date: state.date,\r\n        metric: state.metric,\r\n        currDay: state.currentDayArrayIndex\r\n    })\r\n}\r\nconst mapDispatchToProps = (dispatch) => {  \r\n    return{\r\n        onDataLoad: () => dispatch({type: actionTypes.DATA_LOADED}),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather);\r\n\r\n//change store not local state when search and lon lat","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport background from '../../assests/mt.jpg';\r\nimport Weather from '../../containers/Weather/Weather';\r\nimport { Paper } from '@material-ui/core';\r\nconst useStyle =  makeStyles((theme) => ({\r\n    backgroundImage:{\r\n        backgroundImage: `url(${background})`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover'\r\n    },\r\n    fullHeight: {\r\n        height: '100vh'\r\n    },\r\n    mainContent: {\r\n        position: \"absolute\",\r\n        bottom: 0,\r\n        left: 0\r\n    },\r\n    padding: {\r\n        padding: '5px'\r\n    }\r\n}));\r\n\r\nconst Layout = (props) => {\r\n    const classes = useStyle();\r\n    return(\r\n        <Paper square className={[classes.backgroundImage, classes.fullHeight].join(' ')}>\r\n            <Grid container direction=\"column\" className={classes.padding}>\r\n                <Grid container item xs={12} >\r\n                    <Navigation />\r\n                </Grid>\r\n                <Grid container item xs={12} className={classes.mainContent}>\r\n                    <Weather />\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n};\r\nexport default Layout;","import React from 'react';\nimport './App.css';\nimport Layout from './components/Layout/Layout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createMuiTheme} from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n\r\n    palette:{\r\n        text:{\r\n            primary: \"#ffffff\"\r\n        }\r\n    }\r\n});\r\nexport default theme;","import * as actionTypes from '../actions';\r\nimport moment from 'moment';\r\nconst initialState = {\r\n    search: null,\r\n    city: null,\r\n    latitude: null,\r\n    longitude: null,\r\n    date: moment(new Date()).format('LL'),\r\n    metric: true,\r\n    currentDayArrayIndex: 0,\r\n    dataLoaded: false,\r\n    isReset: true,\r\n    currentCity: null\r\n}\r\nconst reducer = (state = initialState, action) => {\r\n    if(action.type === actionTypes.UPDATE_STORE){\r\n        return{\r\n            ...state,\r\n            search: action.search ? action.search : state.search ? state.search : null,\r\n            city: action.city ? action.city : state.city ? state.city : null,\r\n            latitude: action.lat,\r\n            longitude: action.lon,\r\n            date:moment(new Date()).format('LL'),   //so that when one searches or changes location they aren't in forecast anymore\r\n            isReset: true,\r\n            currentDayArrayIndex: 0,\r\n            currentCity: action.currCity\r\n        }\r\n    }\r\n    if(action.type === actionTypes.UNITS_CHANGE){\r\n        return{\r\n            ...state,\r\n            metric: action.value\r\n        }\r\n    }\r\n    if(action.type === actionTypes.DATE_INCREMENT){\r\n        const convertedCurrentDate = moment(state.date).format(); //if not for this then moment first converts the formatted date to its default format and which leads to one less day\r\n        const updatedCurrentDayArrayIndex = state.currentDayArrayIndex + 1;\r\n        return{\r\n            ...state,\r\n            date: moment(convertedCurrentDate).add(1, 'days').format('LL'),\r\n            currentDayArrayIndex: updatedCurrentDayArrayIndex,\r\n            isReset: false\r\n\r\n        }\r\n    }\r\n    if(action.type === actionTypes.DATE_DECREMENT){\r\n        const convertedCurrentDate = moment(state.date).format(); //if not for this then moment first converts the formatted date to its default format and which leads to one less day\r\n        const updatedCurrentDayArrayIndex = state.currentDayArrayIndex - 1;\r\n        const shouldReset = updatedCurrentDayArrayIndex ? false : true;\r\n        return{\r\n            ...state,\r\n            date: moment(convertedCurrentDate).subtract(1, 'days').format('LL'),\r\n            currentDayArrayIndex: updatedCurrentDayArrayIndex,\r\n            isReset: shouldReset\r\n        }\r\n    }\r\n    if(action.type === actionTypes.DATA_LOADED){\r\n        return{\r\n            ...state,\r\n            dataLoaded: true\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport theme from './theme';\nimport thunk from 'redux-thunk';\n\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './store/reducers/reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <ThemeProvider theme={theme}>\n          <App />\n      </ThemeProvider>\n    </Provider>\n    </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mt.72345933.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.ad789581.svg\";","module.exports = __webpack_public_path__ + \"static/media/day.7f93fbdb.svg\";","module.exports = __webpack_public_path__ + \"static/media/night.a3f3f38d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudyDay.b931d84d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudyNight.ef1c6aa1.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunder.7142c78b.svg\";","module.exports = __webpack_public_path__ + \"static/media/drizzle.c8cdb216.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy.d235ab65.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy.3def7c9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/haze.ca32cb42.png\";","module.exports = __webpack_public_path__ + \"static/media/humidity.5a3d9858.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.3ce03e2b.svg\";","module.exports = __webpack_public_path__ + \"static/media/air.969aeeab.svg\";"],"sourceRoot":""}